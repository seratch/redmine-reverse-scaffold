<%@val s: skinny.Skinny %>
<%@val keyAndErrorMessages: skinny.KeyAndErrorMessages %>

<%-- Be aware of package imports.
 1. src/main/scala/templates/ScalatePackage.scala
 2. scalateTemplateConfig in project/Build.scala
--%>

<div class="form-group">
  <label class="control-label" for="timestamp">
    ${s.i18n.getOrKey("openIdAuthenticationNonce.timestamp")}
  </label>
  <div class="controls row">
    <div class="${if(keyAndErrorMessages.hasErrors("timestamp")) "has-error" else ""}">
      <div class="col-xs-12">
        <input type="text" name="timestamp" class="form-control" value="${s.params.timestamp}" />
      </div>
    </div>
    #if (keyAndErrorMessages.hasErrors("timestamp"))
      <div class="col-xs-12 has-error">
        #for (error <- keyAndErrorMessages.getErrors("timestamp"))
          <label class="control-label">${error}</label>
        #end
      </div>
    #end
  </div>
</div>
<div class="form-group">
  <label class="control-label" for="server_url">
    ${s.i18n.getOrKey("openIdAuthenticationNonce.serverUrl")}
  </label>
  <div class="controls row">
    <div class="${if(keyAndErrorMessages.hasErrors("server_url")) "has-error" else ""}">
      <div class="col-xs-12">
        <input type="text" name="server_url" class="form-control" value="${s.params.server_url}" />
      </div>
    </div>
    #if (keyAndErrorMessages.hasErrors("server_url"))
      <div class="col-xs-12 has-error">
        #for (error <- keyAndErrorMessages.getErrors("server_url"))
          <label class="control-label">${error}</label>
        #end
      </div>
    #end
  </div>
</div>
<div class="form-group">
  <label class="control-label" for="salt">
    ${s.i18n.getOrKey("openIdAuthenticationNonce.salt")}
  </label>
  <div class="controls row">
    <div class="${if(keyAndErrorMessages.hasErrors("salt")) "has-error" else ""}">
      <div class="col-xs-12">
        <input type="text" name="salt" class="form-control" value="${s.params.salt}" />
      </div>
    </div>
    #if (keyAndErrorMessages.hasErrors("salt"))
      <div class="col-xs-12 has-error">
        #for (error <- keyAndErrorMessages.getErrors("salt"))
          <label class="control-label">${error}</label>
        #end
      </div>
    #end
  </div>
</div>
<div class="form-actions">
  ${unescape(s.csrfHiddenInputTag)}
  <input type="submit" class="btn btn-primary" value="${s.i18n.getOrKey("submit")}">
  <a class="btn btn-default" href="${s.url(Controllers.openIdAuthenticationNonces.indexUrl)}">${s.i18n.getOrKey("cancel")}</a>
</div>
